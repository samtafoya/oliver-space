{"ast":null,"code":"var _jsxFileName = \"/Users/sammitafoya/oliver-take-home/src/AllReviews.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass AllReviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: []\n    };\n  }\n\n  componentDidMount() {\n    let url = \"http://localhost:3004/reviews\";\n    fetch(url).then(resp => resp.json()).then(data => {\n      let reviews = data.map((reviews, index) => {\n        // new review stars are coming in as strings not nums, trying to fix but running out of time\n        let star = 0;\n\n        if (typeof reviews.star_rating != 'number') {\n          console.log(typeof reviews.star_rating);\n          star = parseInt(reviews.star_rating);\n        } else {\n          console.log(\"is a num\");\n          star = reviews.star_rating;\n        }\n        /*\n        return (\n            <div key={index}>\n                <h3>{reviews.headline}</h3>\n                <h3>{star} / 5 stars</h3>\n                <p>Written by: {reviews.author}</p>\n                <p>{reviews.body}</p>\n            </div>\n        )\n        */\n\n      });\n      this.setState({\n        reviews: reviews\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Product Reviews\"), this.state.reviews);\n  }\n\n}\n\nexport default AllReviews;","map":{"version":3,"sources":["/Users/sammitafoya/oliver-take-home/src/AllReviews.js"],"names":["React","Component","AllReviews","state","reviews","componentDidMount","url","fetch","then","resp","json","data","map","index","star","star_rating","console","log","parseInt","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAG/BE,KAH+B,GAGvB;AACJC,MAAAA,OAAO,EAAE;AADL,KAHuB;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,GAAG,GAAG,+BAAV;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,UAAIP,OAAO,GAAGO,IAAI,CAACC,GAAL,CAAS,CAACR,OAAD,EAAUS,KAAV,KAAoB;AACvC;AACA,YAAIC,IAAI,GAAG,CAAX;;AACA,YAAI,OAAOV,OAAO,CAACW,WAAf,IAA8B,QAAlC,EAA4C;AACxCC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAOb,OAAO,CAACW,WAA3B;AACAD,UAAAA,IAAI,GAAGI,QAAQ,CAACd,OAAO,CAACW,WAAT,CAAf;AACH,SAHD,MAIK;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAH,UAAAA,IAAI,GAAGV,OAAO,CAACW,WAAf;AACH;AACD;;;;;;;;;;;AAUH,OArBa,CAAd;AAsBA,WAAKI,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAEA;AAAX,OAAd;AACH,KA1BL;AA4BH;;AAIDgB,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEK,KAAKjB,KAAL,CAAWC,OAFhB,CADJ;AAMH;;AAjD8B;;AAoDnC,eAAeF,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass AllReviews extends Component {\n\n    // Initialize state\n    state = {\n        reviews: []\n    }\n\n    componentDidMount() {\n        let url = \"http://localhost:3004/reviews\";\n        fetch(url)\n            .then(resp => resp.json())\n            .then(data => {\n                let reviews = data.map((reviews, index) => {\n                    // new review stars are coming in as strings not nums, trying to fix but running out of time\n                    let star = 0;\n                    if (typeof reviews.star_rating != 'number') {\n                        console.log(typeof reviews.star_rating);\n                        star = parseInt(reviews.star_rating);\n                    }\n                    else {\n                        console.log(\"is a num\");\n                        star = reviews.star_rating;\n                    }\n                    /*\n                    return (\n                        <div key={index}>\n                            <h3>{reviews.headline}</h3>\n                            <h3>{star} / 5 stars</h3>\n                            <p>Written by: {reviews.author}</p>\n                            <p>{reviews.body}</p>\n                        </div>\n                    )\n                    */\n                })\n                this.setState({ reviews: reviews });\n            })\n\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <h1>Product Reviews</h1>\n                {this.state.reviews}\n            </div>\n        );\n    }\n}\n\nexport default AllReviews;"]},"metadata":{},"sourceType":"module"}