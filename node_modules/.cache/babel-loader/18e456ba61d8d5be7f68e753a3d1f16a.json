{"ast":null,"code":"var _jsxFileName = \"/Users/sammitafoya/oliver-take-home/src/AllReviews.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass AllReviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: []\n    };\n  }\n\n  componentDidMount() {\n    let url = \"http://localhost:3004/reviews\";\n    fetch(url).then(resp => resp.json()).then(data => {\n      let reviews = data.map((reviews, index) => {\n        let star = 0;\n\n        if (isNaN(reviews.star_rating)) {\n          if (isNaN(reviews.star_rating)) {\n            console.log(\"not a num\");\n            star = parseInt(reviews.star_rating);\n          } else {\n            console.log(\"is a num\");\n            star = reviews.star_rating;\n          }\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }\n        }, reviews.headline), /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }\n        }, star, \" / 5 stars\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }\n        }, \"Written by: \", reviews.author), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }\n        }, reviews.body));\n      });\n      this.setState({\n        reviews: reviews\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Product Reviews\"), this.state.reviews);\n  }\n\n}\n\nexport default AllReviews;","map":{"version":3,"sources":["/Users/sammitafoya/oliver-take-home/src/AllReviews.js"],"names":["React","Component","AllReviews","state","reviews","componentDidMount","url","fetch","then","resp","json","data","map","index","star","isNaN","star_rating","console","log","parseInt","headline","author","body","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAG/BE,KAH+B,GAGvB;AACJC,MAAAA,OAAO,EAAE;AADL,KAHuB;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,GAAG,GAAG,+BAAV;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,UAAIP,OAAO,GAAGO,IAAI,CAACC,GAAL,CAAS,CAACR,OAAD,EAAUS,KAAV,KAAoB;AACvC,YAAIC,IAAI,GAAG,CAAX;;AACA,YAAIC,KAAK,CAACX,OAAO,CAACY,WAAT,CAAT,EAAgC;AAC5B,cAAID,KAAK,CAACX,OAAO,CAACY,WAAT,CAAT,EAAgC;AAC5BC,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,YAAAA,IAAI,GAAGK,QAAQ,CAACf,OAAO,CAACY,WAAT,CAAf;AACH,WAHD,MAIK;AACDC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAJ,YAAAA,IAAI,GAAGV,OAAO,CAACY,WAAf;AACH;AACJ;;AACD,4BACI;AAAK,UAAA,GAAG,EAAEH,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKT,OAAO,CAACgB,QAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKN,IAAL,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAgBV,OAAO,CAACiB,MAAxB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIjB,OAAO,CAACkB,IAAZ,CAJJ,CADJ;AASH,OArBa,CAAd;AAsBA,WAAKC,QAAL,CAAc;AAAEnB,QAAAA,OAAO,EAAEA;AAAX,OAAd;AACH,KA1BL;AA4BH;;AAIDoB,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEK,KAAKrB,KAAL,CAAWC,OAFhB,CADJ;AAMH;;AAjD8B;;AAoDnC,eAAeF,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass AllReviews extends Component {\n\n    // Initialize state\n    state = {\n        reviews: []\n    }\n\n    componentDidMount() {\n        let url = \"http://localhost:3004/reviews\";\n        fetch(url)\n            .then(resp => resp.json())\n            .then(data => {\n                let reviews = data.map((reviews, index) => {\n                    let star = 0;\n                    if (isNaN(reviews.star_rating)) {\n                        if (isNaN(reviews.star_rating)) {\n                            console.log(\"not a num\");\n                            star = parseInt(reviews.star_rating);\n                        }\n                        else {\n                            console.log(\"is a num\");\n                            star = reviews.star_rating;\n                        }\n                    }\n                    return (\n                        <div key={index}>\n                            <h3>{reviews.headline}</h3>\n                            <h3>{star} / 5 stars</h3>\n                            <p>Written by: {reviews.author}</p>\n                            <p>{reviews.body}</p>\n                        </div>\n\n                    )\n                })\n                this.setState({ reviews: reviews });\n            })\n\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <h1>Product Reviews</h1>\n                {this.state.reviews}\n            </div>\n        );\n    }\n}\n\nexport default AllReviews;"]},"metadata":{},"sourceType":"module"}