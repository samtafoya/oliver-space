{"ast":null,"code":"var _jsxFileName = \"/Users/sammitafoya/oliver-take-home/src/AllReviews.js\";\nimport React, { Component } from 'react';\nimport './Reviews.css';\n\nclass AllReviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: []\n    };\n  }\n\n  componentDidMount() {\n    let url = \"http://localhost:3004/reviews\";\n    fetch(url).then(resp => resp.json()).then(data => {\n      let reviews = data.map((reviews, index) => {\n        // new review stars are coming in as strings not nums, trying to fix but running out of time\n        let star = 0;\n\n        if (typeof reviews.star_rating != 'number') {\n          console.log(typeof reviews.star_rating);\n          star = parseInt(reviews.star_rating);\n        } else {\n          console.log(\"is a num\");\n          star = reviews.star_rating;\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"card-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"d-flex justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"d-flex justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"ml-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"h5 m-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 45\n          }\n        }, reviews.headline), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"h7 text-muted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 45\n          }\n        }, reviews.author))))), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          class: \"card-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }\n        }, reviews.body)));\n        /*\n        return (\n            <div key={index}>\n                <h3>{reviews.headline}</h3>\n                <h3>{star} / 5 stars</h3>\n                <p>Written by: {reviews.author}</p>\n                <p>{reviews.body}</p>\n            </div>\n        )\n        */\n      });\n      this.setState({\n        reviews: reviews\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Product Reviews\"), this.state.reviews);\n  }\n\n}\n\nexport default AllReviews;","map":{"version":3,"sources":["/Users/sammitafoya/oliver-take-home/src/AllReviews.js"],"names":["React","Component","AllReviews","state","reviews","componentDidMount","url","fetch","then","resp","json","data","map","index","star","star_rating","console","log","parseInt","headline","author","body","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAG/BE,KAH+B,GAGvB;AACJC,MAAAA,OAAO,EAAE;AADL,KAHuB;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,GAAG,GAAG,+BAAV;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,UAAIP,OAAO,GAAGO,IAAI,CAACC,GAAL,CAAS,CAACR,OAAD,EAAUS,KAAV,KAAoB;AACvC;AACA,YAAIC,IAAI,GAAG,CAAX;;AACA,YAAI,OAAOV,OAAO,CAACW,WAAf,IAA8B,QAAlC,EAA4C;AACxCC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAOb,OAAO,CAACW,WAA3B;AACAD,UAAAA,IAAI,GAAGI,QAAQ,CAACd,OAAO,CAACW,WAAT,CAAf;AACH,SAHD,MAIK;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAH,UAAAA,IAAI,GAAGV,OAAO,CAACW,WAAf;AACH;;AACD,4BACI;AAAK,UAAA,GAAG,EAAEF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,KAAK,EAAC,mDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,KAAK,EAAC,mDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBT,OAAO,CAACe,QAA7B,CADJ,eAEI;AAAK,UAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4Bf,OAAO,CAACgB,MAApC,CAFJ,CADJ,CADJ,CADJ,CADJ,eAWI;AAAK,UAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAG,UAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBhB,OAAO,CAACiB,IAA9B,CADJ,CAXJ,CADJ;AAiBA;;;;;;;;;;AAUH,OAtCa,CAAd;AAuCA,WAAKC,QAAL,CAAc;AAAElB,QAAAA,OAAO,EAAEA;AAAX,OAAd;AACH,KA3CL;AA6CH;;AAIDmB,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEK,KAAKpB,KAAL,CAAWC,OAFhB,CADJ;AAMH;;AAlE8B;;AAqEnC,eAAeF,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Reviews.css';\n\nclass AllReviews extends Component {\n\n    // Initialize state\n    state = {\n        reviews: []\n    }\n\n    componentDidMount() {\n        let url = \"http://localhost:3004/reviews\";\n        fetch(url)\n            .then(resp => resp.json())\n            .then(data => {\n                let reviews = data.map((reviews, index) => {\n                    // new review stars are coming in as strings not nums, trying to fix but running out of time\n                    let star = 0;\n                    if (typeof reviews.star_rating != 'number') {\n                        console.log(typeof reviews.star_rating);\n                        star = parseInt(reviews.star_rating);\n                    }\n                    else {\n                        console.log(\"is a num\");\n                        star = reviews.star_rating;\n                    }\n                    return (\n                        <div key={index} >\n                            <div class=\"card-header\">\n                                <div class=\"d-flex justify-content-between align-items-center\">\n                                    <div class=\"d-flex justify-content-between align-items-center\">\n                                        <div class=\"ml-2\">\n                                            <div class=\"h5 m-0\">{reviews.headline}</div>\n                                            <div class=\"h7 text-muted\">{reviews.author}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card-body\">\n                                <p class=\"card-text\">{reviews.body}</p>\n                            </div>\n                        </div>\n                    )\n                    /*\n                    return (\n                        <div key={index}>\n                            <h3>{reviews.headline}</h3>\n                            <h3>{star} / 5 stars</h3>\n                            <p>Written by: {reviews.author}</p>\n                            <p>{reviews.body}</p>\n                        </div>\n                    )\n                    */\n                })\n                this.setState({ reviews: reviews });\n            })\n\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <h1>Product Reviews</h1>\n                {this.state.reviews}\n            </div>\n        );\n    }\n}\n\nexport default AllReviews;"]},"metadata":{},"sourceType":"module"}